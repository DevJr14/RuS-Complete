<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RuS.Server</name>
    </assembly>
    <members>
        <member name="T:RuS.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:RuS.Server.Controllers.Communication.ChatsController.GetChatHistoryAsync(System.String)">
            <summary>
            Get user wise chat history
            </summary>
            <param name="contactId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Communication.ChatsController.GetChatUsersAsync">
            <summary>
            get available users
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Communication.ChatsController.SaveMessageAsync(RuS.Application.Models.Chat.ChatHistory{RuS.Application.Interfaces.Chat.IChatUser})">
            <summary>
            Save Chat Message
            </summary>
            <param name="message"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.AccountController.UpdateProfile(RuS.Application.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.AccountController.ChangePassword(RuS.Application.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(RuS.Application.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.TokenController.Get(RuS.Application.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.TokenController.Refresh(RuS.Application.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.UpdateRolesAsync(RuS.Application.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.RegisterAsync(RuS.Application.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(RuS.Application.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User Status (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.ForgotPasswordAsync(RuS.Application.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.ResetPasswordAsync(RuS.Application.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. Product Create Permission)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleClaimController.Post(RuS.Application.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleController.Post(RuS.Application.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.RoleController.Update(RuS.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="T:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4">
            <summary>
            Abstract Extended Attributes Controller Class
            </summary>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAll">
            <summary>
            Get All Entity Extended Attributes
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAllByEntityId(`1)">
            <summary>
            Get All Entity Extended Attributes by entity id
            </summary>
            <param name="entityId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetById(`0)">
            <summary>
            Get Entity Extended Attribute By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Post(RuS.Application.Features.ExtendedAttributes.Commands.AddEdit.AddEditExtendedAttributeCommand{`0,`1,`2,`3})">
            <summary>
            Create/Update a Entity Extended Attribute
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Delete(`0)">
            <summary>
            Delete a Entity Extended Attribute
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Export(System.String,`1,System.Boolean,System.Boolean,System.String)">
            <summary>
            Search Entity Extended Attribute and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="entityId"></param>
            <param name="includeEntity"></param>
            <param name="onlyCurrentGroup"></param>
            <param name="currentGroup"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentsController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get All Documents
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentsController.GetById(System.Int32)">
            <summary>
            Get Document By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentsController.Post(RuS.Application.Features.Documents.Commands.AddEdit.AddEditDocumentCommand)">
            <summary>
            Add/Edit Document
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentsController.Delete(System.Int32)">
            <summary>
            Delete a Document
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentTypesController.GetAll">
            <summary>
            Get All Document Types
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentTypesController.GetById(System.Int32)">
            <summary>
            Get Document Type By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentTypesController.Post(RuS.Application.Features.DocumentTypes.Commands.AddEdit.AddEditDocumentTypeCommand)">
            <summary>
            Create/Update a Document Type
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentTypesController.Delete(System.Int32)">
            <summary>
            Delete a Document Type
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.Misc.DocumentTypesController.Export(System.String)">
            <summary>
            Search Document Types and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.BrandsController.GetAll">
            <summary>
            Get All Brands
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.BrandsController.GetById(System.Int32)">
            <summary>
            Get a Brand By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.BrandsController.Post(RuS.Application.Features.Brands.Commands.AddEdit.AddEditBrandCommand)">
            <summary>
            Create/Update a Brand
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.BrandsController.Delete(System.Int32)">
            <summary>
            Delete a Brand
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.BrandsController.Export(System.String)">
            <summary>
            Search Brands and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.ProductsController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.ProductsController.GetProductImageAsync(System.Int32)">
            <summary>
            Get a Product Image by Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.ProductsController.Post(RuS.Application.Features.Products.Commands.AddEdit.AddEditProductCommand)">
            <summary>
            Add/Edit a Product
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.ProductsController.Delete(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Catalog.ProductsController.Export(System.String)">
            <summary>
            Search Products and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.Post(RuS.Application.Features.Companies.Commands.AddEdit.AddEditCompanyCommand)">
            <summary>
            Create/Update a Company
            </summary>
            <param name="command">
            <summary>
            Recieves input values
            </summary>
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.GetAllPaged(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Paged Companies
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.GetAll">
            <summary>
            Get All Companies
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.GetById(System.Int32)">
            <summary>
            Get a Company By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.Delete(System.Int32)">
            <summary>
            Delete a Company
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.CompaniesController.Export(System.String)">
            <summary>
            Search Companies and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.Post(RuS.Application.Features.Employees.Commands.AddEdit.AddEditEmployeeCommand)">
            <summary>
            Create/Update a Employee
            </summary>
            <param name="command">
            <summary>
            Recieves input values
            </summary>
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Employees
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.GetAllNotPaged">
            <summary>
            Get Employees Not Paged
            </summary>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.GetById(System.Int32)">
            <summary>
            Get a Employee By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.Delete(System.Int32)">
            <summary>
            Delete a Employees
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.EmployeesController.Export(System.String)">
            <summary>
            Search Employees and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.Post(RuS.Application.Features.Sites.Commands.AddEdit.AddEditSiteCommand)">
            <summary>
            Create/Update a Site
            </summary>
            <param name="command">
            <summary>
            Recieves input values
            </summary>
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Sites Paged. Data will be paged.
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.GetAll">
            <summary>
            Get all Sites
            </summary>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.GetById(System.Int32)">
            <summary>
            Get a Site By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.Delete(System.Int32)">
            <summary>
            Delete a Site
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Core.SitesController.Export(System.String)">
            <summary>
            Search Sites and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.DashboardController.GetDataAsync">
            <summary>
            Get Dashboard Data
            </summary>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.CategoriesController.GetAll">
            <summary>
            Get All Categories
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.CategoriesController.GetById(System.Int32)">
            <summary>
            Get a Category By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.CategoriesController.Post(RuS.Application.Features.Categories.Commands.AddEditCategoryCommand)">
            <summary>
            Create/Update a Category
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.CategoriesController.Delete(System.Int32)">
            <summary>
            Delete a Category
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.CategoriesController.Export(System.String)">
            <summary>
            Search Categories and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ClientsController.GetAll">
            <summary>
            Get All Clients
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ClientsController.GetById(System.Int32)">
            <summary>
            Get a Clients By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ClientsController.Post(RuS.Application.Features.Clients.Commands.AddEdit.AddEditClientCommand)">
            <summary>
            Create/Update a Client
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ClientsController.Delete(System.Int32)">
            <summary>
            Delete a Client
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ClientsController.Export(System.String)">
            <summary>
            Search Client and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.DiscussionsController.GetAll(System.Int32)">
            <summary>
            Get All Discussions For A Project
            </summary>
            <param name="projectid">
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.DiscussionsController.GetAllForTask(System.Int32)">
            <summary>
            Get All Discussions For A Task
            </summary>
            <param name="taskid">
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.DiscussionsController.GetById(System.Int32)">
            <summary>
            Get A Discussions By Id
            </summary>
            <param name="id">
            </param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.DiscussionsController.Post(RuS.Application.Features.Discussions.Commands.AddEdit.AddEditDiscussionCommand)">
            <summary>
            Create/Update Discussion
            </summary>
            <param name="command"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.DiscussionsController.Delete(System.Int32)">
            <summary>
            Delete a Discussion
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.PrioritiesController.GetAll">
            <summary>
            Get All Priorities
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.PrioritiesController.GetById(System.Int32)">
            <summary>
            Get a Priority By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.PrioritiesController.Post(RuS.Application.Features.Priorities.Commands.AddEditPriorityCommand)">
            <summary>
            Create/Update a Priority
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.PrioritiesController.Delete(System.Int32)">
            <summary>
            Delete a Priority
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.PrioritiesController.Export(System.String)">
            <summary>
            Search Priority and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ProjectsController.GetAll">
            <summary>
            Get All Projects
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ProjectsController.GetById(System.Int32)">
            <summary>
            Get a Project By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ProjectsController.Post(RuS.Application.Features.Projects.Commands.AddEdit.AddEditProjectCommand)">
            <summary>
            Create/Update a Project
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ProjectsController.Delete(System.Int32)">
            <summary>
            Delete a Project
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.ProjectsController.Export(System.String)">
            <summary>
            Search Project and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.StatusesController.GetAll">
            <summary>
            Get All Statuses
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.StatusesController.GetById(System.Int32)">
            <summary>
            Get a Status By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.StatusesController.Post(RuS.Application.Features.Statuses.Commands.AddEditStatusCommand)">
            <summary>
            Create/Update a Status
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.StatusesController.Delete(System.Int32)">
            <summary>
            Delete a Status
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.StatusesController.Export(System.String)">
            <summary>
            Search Status and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.GetAll">
            <summary>
            Get All Tasks
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.GetAllForProject(System.Int32)">
            <summary>
            Get All Tasks For a Project
            </summary>
            <param name="projectId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.GetById(System.Int32)">
            <summary>
            Get a Task By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.Post(RuS.Application.Features.Tasks.Commands.AddEdit.AddEditTaskCommand)">
            <summary>
            Create/Update a Task
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.Delete(System.Int32)">
            <summary>
            Delete a Task
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TasksController.Export(System.String)">
            <summary>
            Search Tasks and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.GetAll">
            <summary>
            Get All Teams
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.GetAll(System.Int32)">
            <summary>
            Get Project Teams
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.GetById(System.Int32)">
            <summary>
            Get Team By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.GetMembers(System.Int32)">
            <summary>
            Get Team Members
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.Post(RuS.Application.Features.Teams.Commands.AddEdit.AddEditTeamCommand)">
            <summary>
            Create/Update a Team
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.Post(RuS.Application.Features.Teams.Commands.AddEdit.UpdateTeamMembersCommand)">
            <summary>
            Update Team Member(s) 
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.Post(RuS.Application.Features.Teams.Commands.AddEdit.AddRemoveTeamMemberCommand)">
            <summary>
            Add or Remove Team Member(s) 
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.Delete(System.Int32)">
            <summary>
            Delete a Team
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:RuS.Server.Controllers.v1.Project.TeamsController.Export(System.String)">
            <summary>
            Search Team and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
    </members>
</doc>
